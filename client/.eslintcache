[{"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\pages\\trivialarch.page.jsx":"1","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\pages\\home.page.jsx":"2","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\App.js":"3","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\pages\\contact.page.jsx":"4","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\store\\reducer.js":"5","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\navbar\\navbar.component.jsx":"6","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\footer\\footer.component.jsx":"7","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\store\\actions.js":"8","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\store\\store.component.jsx":"9","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\icons\\architects.component.jsx":"10","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\index.js":"11","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\pages\\icons.page.jsx":"12","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\quiz\\ranking.component.jsx":"13","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\quiz\\score.component.jsx":"14","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\quiz\\quizMode.component.jsx":"15","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\quiz\\question.component.jsx":"16","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\quiz\\rules.component.jsx":"17"},{"size":3219,"mtime":1613465800974,"results":"18","hashOfConfig":"19"},{"size":1941,"mtime":1613336574383,"results":"20","hashOfConfig":"19"},{"size":1487,"mtime":1613137102928,"results":"21","hashOfConfig":"19"},{"size":3365,"mtime":1613465868694,"results":"22","hashOfConfig":"19"},{"size":2024,"mtime":1613136796755,"results":"23","hashOfConfig":"19"},{"size":2261,"mtime":1613061159950,"results":"24","hashOfConfig":"19"},{"size":331,"mtime":1611492264903,"results":"25","hashOfConfig":"19"},{"size":404,"mtime":1613136428289,"results":"26","hashOfConfig":"19"},{"size":797,"mtime":1613466186660,"results":"27","hashOfConfig":"19"},{"size":912,"mtime":1611529176072,"results":"28","hashOfConfig":"19"},{"size":599,"mtime":1611426547215,"results":"29","hashOfConfig":"19"},{"size":747,"mtime":1611528803090,"results":"30","hashOfConfig":"19"},{"size":1345,"mtime":1613465558517,"results":"31","hashOfConfig":"19"},{"size":1897,"mtime":1613383816006,"results":"32","hashOfConfig":"19"},{"size":1453,"mtime":1613375472665,"results":"33","hashOfConfig":"19"},{"size":5079,"mtime":1613384150895,"results":"34","hashOfConfig":"19"},{"size":932,"mtime":1613124625763,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"1t1pnf6",{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\pages\\trivialarch.page.jsx",["80"],"import React, { useState, useEffect, useContext } from \"react\"\r\nimport \"./trivialarch.styles.css\";\r\nimport QuizMode from \"../components/quiz/quizMode.component\";\r\nimport Rules from \"../components/quiz/rules.component\";\r\nimport Question from \"../components/quiz/question.component\";\r\nimport Score from \"../components/quiz/score.component\";\r\nimport Ranking from \"../components/quiz/ranking.component\";\r\n\r\n\r\n// REDUX HOOKS\r\nimport { Context } from \"../components/store/store.component\";\r\nimport { ACTIONS } from \"../components/store/actions\";\r\n\r\n\r\nconst questions = require(\"../assets/questions.asset.json\");\r\n\r\n\r\n\r\nexport default function TrivialArch() {\r\n\r\n    const [state, dispatch] = useContext(Context);\r\n    const [showRanking, setShowRanking] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        const sortedQuestions = [];\r\n        const sortedReducedQuestions = [];\r\n        const randomIndex = [];\r\n\r\n        if (state.quizMode === \"\") {\r\n            dispatch({ type: ACTIONS.ADD_QUESTIONS, payload: { questions: [] } })\r\n        } else {\r\n            for (let question of questions) {\r\n                if (question.tags.includes(state.quizMode)) {\r\n                    sortedQuestions.push(question)\r\n                }\r\n            }\r\n\r\n            while (randomIndex.length < 20) {\r\n                const randomNum = Math.ceil(Math.random() * sortedQuestions.length);\r\n                if (!randomIndex.includes(randomNum)) {\r\n                    randomIndex.push(randomNum)\r\n                }\r\n            }\r\n\r\n            for (let index of randomIndex) {\r\n                sortedReducedQuestions.push(sortedQuestions[index - 1])\r\n            }\r\n\r\n            // console.log(\"sorted questions: \", sortedReducedQuestions)\r\n            dispatch({ type: ACTIONS.ADD_QUESTIONS, payload: { questions: sortedReducedQuestions } })\r\n        }\r\n\r\n    }, [state.quizMode])\r\n\r\n    const handleCancel = e => {\r\n        e.preventDefault();\r\n        dispatch({ type: ACTIONS.RESTORE_GAME })\r\n    }\r\n\r\n    const handleRanking = () => {\r\n        setShowRanking(!showRanking)\r\n    }\r\n\r\n\r\n    const quizDisplay = () => {\r\n\r\n        if (showRanking) {\r\n            return <Ranking />\r\n        } else if (state.quizMode === \"\") {\r\n            return <QuizMode />\r\n        } else if (!state.isReady && state.quizMode !== \"\") {\r\n            return <Rules />\r\n        } else if (state.isReady && state.quizMode !== \"\" && !state.isFinished) {\r\n            return <Question />\r\n        } else if (state.isFinished) {\r\n            return <Score />\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"trivialarch-main\">\r\n            <div className=\"trivialarch-container\">\r\n\r\n                {quizDisplay()}\r\n\r\n                {/* <QuizMode /> */}\r\n                {/* <Rules /> */}\r\n                {/* <Question /> */}\r\n                {/* <Score /> */}\r\n                {/* <Ranking /> */}\r\n\r\n\r\n                {state.quizMode !== \"\" && !state.isFinished && <button onClick={handleCancel} className=\"cancel-btn\">Restart</button>}\r\n                {state.quizMode === \"\" && <button onClick={handleRanking} className=\"cancel-btn\">{!showRanking ? \"Ranking\" : \"Menu\"}</button>}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}",["81","82"],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\pages\\home.page.jsx",["83","84"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./home.styles.css\";\r\nconst quotes = require(\"../assets/quotes.asset.json\");\r\n\r\n\r\nexport default function Home() {\r\n\r\n    const [quote, setQuote] = useState({});\r\n    const [animOn, setAnimOn] = useState(false);\r\n    const [timer, setTimer] = useState(\"\");\r\n\r\n    // let timeout;\r\n\r\n    const quoteshandler = () => {\r\n        \r\n        // CHANGING QUOTES BASED ON RANDOM NUMBERS\r\n        let randomNum = Math.floor(Math.random() * quotes.length)\r\n        while (quotes.indexOf(quote) === randomNum) {\r\n            console.log(\"jumped num: \", randomNum)\r\n            randomNum = Math.floor(Math.random() * quotes.length)\r\n        }\r\n        // console.log(randomNum)\r\n        setQuote(quotes[randomNum])\r\n    }\r\n\r\n    const clickHandler = () => {\r\n        // CLICK HANDLEING WITH FADING ANIMATION\r\n        // setTimer(clearInterval(timer))\r\n\r\n        setAnimOn(true)\r\n        setTimeout(quoteshandler, 350)\r\n        setTimeout(() => setAnimOn(false), 400)\r\n    }\r\n\r\n    const settingTimer = () => {\r\n        let timeout = setInterval(clickHandler, 8000)\r\n        return setTimer(timeout);\r\n    }\r\n\r\n    // componentDidMount Hook\r\n    useEffect(() => {\r\n        quoteshandler()\r\n        settingTimer()\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"home-container\">\r\n            <div className=\"home-main\">\r\n\r\n                <div className=\"quotes-container\">\r\n\r\n                    {quote && <h5 className={\"quote\" + (animOn ? \" animation-active\" : \"\")}>\"{quote.quote}\"</h5>}\r\n\r\n                    <div className=\"quote-data\">\r\n                        {quote && <h6 className={\"author\" + (animOn ? \" animation-active\" : \"\")}>-- {quote.author}.</h6>}\r\n                        {quote && <button className=\"next-quote\" onClick={clickHandler}>Next quote {\"->\"}</button>}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\App.js",["85","86"],"import React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport NavBar from \"./components/navbar/navbar.component\";\nimport Footer from \"./components/footer/footer.component\";\nimport Home from \"./pages/home.page\";\nimport Icons from \"./pages/icons.page\";\nimport TrivialArch from \"./pages/trivialarch.page\";\nimport Contact from \"./pages/contact.page\";\nimport Store from \"./components/store/store.component\";\nimport { Switch, Route, useLocation } from 'react-router-dom';\n\n\nexport default function App() {\n\n  const [menuStrong, setMenuStrong] = useState(\"\");\n  let location = useLocation().pathname\n\n  const menuStrongHandler = () => {\n    switch (location) {\n      case \"/\":\n        setMenuStrong(\"Home\")\n        break;\n      case \"/icons\":\n        setMenuStrong(\"Icons\")\n        break;\n      case \"/trivialArch\":\n        setMenuStrong(\"TrivialArch\")\n        break;\n      case \"/contact\":\n        setMenuStrong(\"Contact\")\n        break;\n    }\n  }\n\n  useEffect(() => {\n    menuStrongHandler()\n  }, [location])\n\n  return (\n    <div className=\"App\">\n      <NavBar menuStrong={menuStrong} />\n\n      <Store>\n        <Switch>\n\n          <Route path=\"/icons/:architect\" component={Icons} />\n          <Route path=\"/icons\" component={Icons} />\n          <Route path=\"/trivialArch\" component={TrivialArch} />\n          <Route path=\"/contact\" component={Contact} />\n          <Route path=\"/*\" component={Home} />\n\n\n\n        </Switch>\n      </Store>\n\n      <Footer />\n    </div>\n  );\n}\n",["87","88"],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\pages\\contact.page.jsx",["89","90"],"import React, { useState, useContext } from \"react\";\r\nimport { Context } from \"../components/store/store.component\";\r\nimport \"./contact.styles.css\";\r\n\r\n\r\nexport default function Contact() {\r\n\r\n    const [state, distpacth] = useContext(Context);\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [topic, setTopic] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n\r\n    const [isSending, setIsSending] = useState(false);\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        // console.log(name, email, topic, description)\r\n\r\n        setIsSending(true)\r\n\r\n        // server request/email\r\n        try {\r\n            const res = await fetch(`${state.url}email`, {\r\n                method: \"POST\",\r\n                body: JSON.stringify({\r\n                    name,\r\n                    email,\r\n                    topic,\r\n                    description\r\n                }),\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n\r\n            const data = await res.json();\r\n            // console.log(data)\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n        setName(\"\")\r\n        setEmail(\"\")\r\n        setTopic(\"\")\r\n        setDescription(\"\")\r\n\r\n        setIsSending(false)\r\n    }\r\n\r\n\r\n    const formDisplay = () => {\r\n\r\n\r\n        return (\r\n            <form onSubmit={handleSubmit}>\r\n\r\n                <label htmlFor=\"name\">Name:</label>\r\n                <input type=\"text\" id=\"name\" required maxLength=\"20\" autoComplete=\"off\" value={name} onChange={e => setName(e.target.value)} />\r\n\r\n                <label htmlFor=\"email\">Email:</label>\r\n                <input type=\"text\" id=\"email\" required maxLength=\"20\" autoComplete=\"off\" value={email} onChange={e => setEmail(e.target.value)} />\r\n\r\n                <label htmlFor=\"topic\">Topic:</label>\r\n                <input type=\"text\" id=\"topic\" required maxLength=\"20\" autoComplete=\"off\" value={topic} onChange={e => setTopic(e.target.value)} />\r\n\r\n                <label htmlFor=\"description\">Your thoughts:</label>\r\n                <textarea\r\n                    id=\"description\"\r\n                    required=\"true\"\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Enter here your ideas...\"\r\n                    value={description}\r\n                    onChange={e => setDescription(e.target.value)}\r\n                ></textarea>\r\n\r\n                <button>Submit</button>\r\n\r\n            </form>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"contact-main\">\r\n            <div className=\"contact-container\">\r\n\r\n                {/* <h4>Contact</h4>\r\n                <div className=\"lds-grid\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n                <h5>Coming soon</h5> */}\r\n\r\n                <h2 className=\"contact-title\">Contact us!</h2>\r\n\r\n                <p className=\"contact-description\">If there is any mistake in the questions, the information or answers are not accurate or you simply wanna say hello, please fulfill the following form.</p>\r\n\r\n\r\n                {isSending ? <div> <i class=\"fas fa-spinner fa-3x\"></i> <p>Sending</p> </div> : formDisplay()}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\store\\reducer.js",[],["91","92"],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\navbar\\navbar.component.jsx",[],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\footer\\footer.component.jsx",[],["93","94"],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\store\\actions.js",[],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\store\\store.component.jsx",[],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\icons\\architects.component.jsx",["95"],"import \"./architects.styles.css\";\r\nconst architects = require(\"../../assets/architects.asset.json\");\r\n\r\nexport default function Architects() {\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"data-container\">\r\n\r\n            {/* {\r\n                architects.map((data, id) => {\r\n                    const { nickname, name, surname } = data\r\n                    return (\r\n                        <tr key={id} className=\"architect\">\r\n                            <th>{nickname}</th>\r\n                            <th>{name}</th>\r\n                            <th>{surname}</th>\r\n                        </tr>\r\n                    )\r\n                })\r\n            } */}\r\n\r\n            <h4>Icons</h4>\r\n\r\n                <div className=\"lds-grid\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n\r\n                <h5>Coming soon</h5>\r\n\r\n        </div>\r\n\r\n    )\r\n}","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\index.js",[],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\pages\\icons.page.jsx",[],["96","97"],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\quiz\\ranking.component.jsx",[],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\quiz\\score.component.jsx",[],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\quiz\\quizMode.component.jsx",["98"],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\quiz\\question.component.jsx",["99","100"],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\quiz\\rules.component.jsx",[],{"ruleId":"101","severity":1,"message":"102","line":54,"column":8,"nodeType":"103","endLine":54,"endColumn":24,"suggestions":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":10,"column":12,"nodeType":"111","messageId":"112","endLine":10,"endColumn":17},{"ruleId":"101","severity":1,"message":"113","line":44,"column":8,"nodeType":"103","endLine":44,"endColumn":10,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":19,"column":5,"nodeType":"117","messageId":"118","endLine":32,"endColumn":6},{"ruleId":"101","severity":1,"message":"119","line":37,"column":6,"nodeType":"103","endLine":37,"endColumn":16,"suggestions":"120"},{"ruleId":"105","replacedBy":"121"},{"ruleId":"107","replacedBy":"122"},{"ruleId":"109","severity":1,"message":"123","line":8,"column":19,"nodeType":"111","messageId":"112","endLine":8,"endColumn":28},{"ruleId":"109","severity":1,"message":"124","line":39,"column":19,"nodeType":"111","messageId":"112","endLine":39,"endColumn":23},{"ruleId":"105","replacedBy":"125"},{"ruleId":"107","replacedBy":"126"},{"ruleId":"105","replacedBy":"127"},{"ruleId":"107","replacedBy":"128"},{"ruleId":"109","severity":1,"message":"129","line":2,"column":7,"nodeType":"111","messageId":"112","endLine":2,"endColumn":17},{"ruleId":"105","replacedBy":"130"},{"ruleId":"107","replacedBy":"131"},{"ruleId":"109","severity":1,"message":"132","line":9,"column":12,"nodeType":"111","messageId":"112","endLine":9,"endColumn":17},{"ruleId":"109","severity":1,"message":"133","line":29,"column":23,"nodeType":"111","messageId":"112","endLine":29,"endColumn":26},{"ruleId":"101","severity":1,"message":"134","line":118,"column":8,"nodeType":"103","endLine":118,"endColumn":23,"suggestions":"135"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["136"],"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'timer' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'quoteshandler' and 'settingTimer'. Either include them or remove the dependency array.",["139"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'menuStrongHandler'. Either include it or remove the dependency array.",["140"],["137"],["138"],"'distpacth' is assigned a value but never used.","'data' is assigned a value but never used.",["137"],["138"],["137"],["138"],"'architects' is assigned a value but never used.",["137"],["138"],"'state' is assigned a value but never used.","'res' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'handleSubmit'. Either include them or remove the dependency array.",["141"],{"desc":"142","fix":"143"},"no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [dispatch, state.quizMode]",{"range":"150","text":"151"},"Update the dependencies array to be: [quoteshandler, settingTimer]",{"range":"152","text":"153"},"Update the dependencies array to be: [location, menuStrongHandler]",{"range":"154","text":"155"},"Update the dependencies array to be: [dispatch, handleSubmit, state.seconds]",{"range":"156","text":"157"},[1856,1872],"[dispatch, state.quizMode]",[1268,1270],"[quoteshandler, settingTimer]",[1009,1019],"[location, menuStrongHandler]",[3992,4007],"[dispatch, handleSubmit, state.seconds]"]