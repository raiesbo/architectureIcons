[{"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\pages\\trivialarch.page.jsx":"1","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\quizz\\rules.component.jsx":"2","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\pages\\home.page.jsx":"3","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\App.js":"4","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\pages\\contact.page.jsx":"5","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\quizz\\question.component.jsx":"6","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\store\\reducer.js":"7","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\quizz\\quizzMode.component.jsx":"8","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\navbar\\navbar.component.jsx":"9","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\footer\\footer.component.jsx":"10","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\store\\actions.js":"11","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\store\\store.component.jsx":"12","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\quizz\\score.component.jsx":"13","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\quizz\\ranking.component.jsx":"14"},{"size":3278,"mtime":1612974369191,"results":"15","hashOfConfig":"16"},{"size":876,"mtime":1612892356427,"results":"17","hashOfConfig":"16"},{"size":1783,"mtime":1611575564481,"results":"18","hashOfConfig":"16"},{"size":1495,"mtime":1612961721089,"results":"19","hashOfConfig":"16"},{"size":594,"mtime":1611496695718,"results":"20","hashOfConfig":"16"},{"size":3783,"mtime":1612958719050,"results":"21","hashOfConfig":"16"},{"size":1762,"mtime":1612958789470,"results":"22","hashOfConfig":"16"},{"size":1455,"mtime":1612893496148,"results":"23","hashOfConfig":"16"},{"size":2245,"mtime":1612961756988,"results":"24","hashOfConfig":"16"},{"size":331,"mtime":1611492264903,"results":"25","hashOfConfig":"16"},{"size":328,"mtime":1612958129272,"results":"26","hashOfConfig":"16"},{"size":741,"mtime":1612968750953,"results":"27","hashOfConfig":"16"},{"size":1849,"mtime":1612969622410,"results":"28","hashOfConfig":"16"},{"size":1276,"mtime":1612974570831,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"1t1pnf6",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\pages\\trivialarch.page.jsx",["60","61"],"import React, { useState, useEffect, useContext } from \"react\"\r\nimport \"./trivialarch.styles.css\";\r\nimport QuizzMode from \"../components/quizz/quizzMode.component\";\r\nimport Rules from \"../components/quizz/rules.component\";\r\nimport Question from \"../components/quizz/question.component\";\r\nimport Score from \"../components/quizz/score.component\";\r\nimport Ranking from \"../components/quizz/ranking.component\";\r\n\r\n\r\n// REDUX HOOKS\r\nimport { Context } from \"../components/store/store.component\";\r\nimport { ACTIONS } from \"../components/store/actions\";\r\n\r\n\r\nconst questions = require(\"../assets/questions.asset.json\");\r\n\r\n\r\n\r\nexport default function TrivialArch() {\r\n\r\n    const [state, dispatch] = useContext(Context);\r\n    const [showRanking, setShowRanking] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        const sortedQuestions = [];\r\n        const sortedReducedQuestions = [];\r\n        const randomIndex = [];\r\n\r\n        if (state.quizzMode === \"\") {\r\n            dispatch({ type: ACTIONS.ADD_QUESTIONS, payload: { questions: [] } })\r\n        } else {\r\n            for (let question of questions) {\r\n                if (question.tags.includes(state.quizzMode)) {\r\n                    sortedQuestions.push(question)\r\n                }\r\n            }\r\n\r\n            while (randomIndex.length < 10) {\r\n                const randomNum = Math.ceil(Math.random() * sortedQuestions.length);\r\n                if (!randomIndex.includes(randomNum)) {\r\n                    randomIndex.push(randomNum)\r\n                }\r\n            }\r\n\r\n            for (let index of randomIndex) {\r\n                sortedReducedQuestions.push(sortedQuestions[index - 1])\r\n            }\r\n\r\n            console.log(\"sorted questions: \", sortedReducedQuestions)\r\n            dispatch({ type: ACTIONS.ADD_QUESTIONS, payload: { questions: sortedReducedQuestions } })\r\n        }\r\n\r\n    }, [state.quizzMode])\r\n\r\n    const handleCancel = e => {\r\n        e.preventDefault();\r\n        dispatch({ type: ACTIONS.RESTORE_GAME })\r\n    }\r\n\r\n    const handleRanking = () => {\r\n        setShowRanking(!showRanking)\r\n    }\r\n\r\n\r\n    const quizzDisplay = () => {\r\n\r\n        if (!showRanking) {\r\n            return <Ranking />\r\n        } else if (state.quizzMode === \"\") {\r\n            return <QuizzMode />\r\n        } else if (!state.isReady && state.quizzMode !== \"\") {\r\n            return <Rules />\r\n        } else if (state.isReady && state.quizzMode !== \"\" && !state.isFinished) {\r\n            return <Question />\r\n        } else if (state.isFinished) {\r\n            return <Score />\r\n        } else {\r\n            return \"\"\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"trivialarch-main\">\r\n            <div className=\"trivialarch-container\">\r\n\r\n\r\n                {quizzDisplay()}\r\n\r\n                {/* <QuizzMode /> */}\r\n                {/* <Rules /> */}\r\n                {/* <Question /> */}\r\n                {/* <Score /> */}\r\n                {/* <Ranking /> */}\r\n\r\n\r\n                {state.quizzMode !== \"\" && !state.isFinished && <button onClick={handleCancel} className=\"cancel-btn\">Restart</button>}\r\n                {state.quizzMode === \"\" && <button onClick={handleRanking} className=\"cancel-btn\">{showRanking ? \"Ranking\" : \"Menu\"}</button>}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\quizz\\rules.component.jsx",[],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\pages\\home.page.jsx",["62","63"],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\App.js",["64","65"],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\pages\\contact.page.jsx",[],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\quizz\\question.component.jsx",["66"],"import { useState, useEffect, useContext } from \"react\";\r\nimport { Context } from \"../store/store.component\";\r\nimport { ACTIONS } from \"../store/actions\";\r\n\r\nimport \"./question.styles.css\";\r\n\r\n\r\n\r\nexport default function Question() {\r\n\r\n    const [state, dispatch] = useContext(Context);\r\n\r\n    const [questionsAnswer, setQuestionsAnswer] = useState(false);\r\n    const [seconds, setSeconds] = useState(30);\r\n    const [counter, setCounter] = useState(\"\");\r\n\r\n    const handleSubmit = e => {\r\n        e && e.preventDefault();\r\n        let right = 0;\r\n        let wrong = 0;\r\n        questionsAnswer ? right++ : wrong++\r\n        dispatch({ type: ACTIONS.ADD_ANSWER, payload: { right, wrong } })\r\n        setQuestionsAnswer(false)\r\n        setCounter(clearTimeout(counter))\r\n        setSeconds(30)\r\n        if (state.answers.total === state.questionsList.length - 1) {\r\n\r\n            // congratulations and score\r\n            console.log(1, state)\r\n            dispatch({ type: ACTIONS.TOGGLE_ISFINISHED })\r\n            console.log(2, state)\r\n        }\r\n    }\r\n\r\n    const questionTemplate = state.questionsList.map((item, id) => {\r\n        return (\r\n            <form onSubmit={handleSubmit} key={id}>\r\n\r\n                <h3 className=\"question\">{item.question}</h3>\r\n\r\n                <input\r\n                    type=\"radio\"\r\n                    name=\"answer\"\r\n                    id=\"answer1\"\r\n                    className=\"input1\"\r\n                    onChange={() => setQuestionsAnswer(item.answers[0].isCorrect)}\r\n                />\r\n                <label htmlFor=\"answer1\" className=\"answer1\" >{item.answers[0].answer}</label>\r\n\r\n                <input\r\n                    type=\"radio\"\r\n                    name=\"answer\"\r\n                    id=\"answer2\"\r\n                    className=\"input2\"\r\n                    onChange={() => setQuestionsAnswer(item.answers[1].isCorrect)}\r\n                />\r\n                <label htmlFor=\"answer2\" className=\"answer2\" >{item.answers[1].answer}</label>\r\n\r\n                <input\r\n                    type=\"radio\"\r\n                    name=\"answer\"\r\n                    id=\"answer3\"\r\n                    className=\"input3\"\r\n                    onChange={() => setQuestionsAnswer(item.answers[2].isCorrect)}\r\n                />\r\n                <label htmlFor=\"answer3\" className=\"answer3\" >{item.answers[2].answer}</label>\r\n\r\n                <input\r\n                    type=\"radio\"\r\n                    name=\"answer\"\r\n                    id=\"answer4\"\r\n                    className=\"input4\"\r\n                    onChange={() => setQuestionsAnswer(item.answers[3].isCorrect)}\r\n                />\r\n                <label htmlFor=\"answer4\" className=\"answer4\" >{item.answers[3].answer}</label>\r\n\r\n                <button className=\"button\" type=\"submit\">Next question</button>\r\n\r\n            </form>\r\n        )\r\n    })\r\n\r\n    useEffect(() => {\r\n        let timing = setTimeout(() => {\r\n            if (seconds === 0) {\r\n                handleSubmit()\r\n            } else {\r\n                setSeconds(seconds - 1)\r\n            }\r\n        }, 1000)\r\n        setCounter(timing)\r\n    }, [seconds])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"question-container\">\r\n\r\n            <h4 className=\"question-num\">Question n° {state.answers.total + 1}</h4>\r\n            <h4 className=\"topic\">Mode: {state.quizzMode}</h4>\r\n            <h4 className=\"correct\">Correct: {state.answers.right}</h4>\r\n            <h4 className=\"incorrect\">Incorrect: {state.answers.wrong}</h4>\r\n            <h4 className=\"timer\">Time:\r\n                <span\r\n                    style={{ color: seconds >= 10 ? \"green\" : \"red\" }}\r\n                >{seconds}</span>\r\n            </h4>\r\n\r\n            {questionTemplate[state.answers.total]}\r\n\r\n\r\n        </div>\r\n    )\r\n}","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\store\\reducer.js",[],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\quizz\\quizzMode.component.jsx",["67"],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\navbar\\navbar.component.jsx",[],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\footer\\footer.component.jsx",[],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\store\\actions.js",[],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\store\\store.component.jsx",[],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\quizz\\score.component.jsx",[],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\quizz\\ranking.component.jsx",[],{"ruleId":"68","severity":1,"message":"69","line":1,"column":38,"nodeType":"70","messageId":"71","endLine":1,"endColumn":48},{"ruleId":"72","severity":1,"message":"73","line":54,"column":8,"nodeType":"74","endLine":54,"endColumn":25,"suggestions":"75"},{"ruleId":"68","severity":1,"message":"76","line":36,"column":9,"nodeType":"70","messageId":"71","endLine":36,"endColumn":16},{"ruleId":"72","severity":1,"message":"77","line":36,"column":19,"nodeType":"78","endLine":36,"endColumn":51},{"ruleId":"79","severity":1,"message":"80","line":19,"column":5,"nodeType":"81","messageId":"82","endLine":32,"endColumn":6},{"ruleId":"72","severity":1,"message":"83","line":37,"column":6,"nodeType":"74","endLine":37,"endColumn":16,"suggestions":"84"},{"ruleId":"72","severity":1,"message":"85","line":92,"column":8,"nodeType":"74","endLine":92,"endColumn":17,"suggestions":"86"},{"ruleId":"68","severity":1,"message":"87","line":9,"column":12,"nodeType":"70","messageId":"71","endLine":9,"endColumn":17},"no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["88"],"'timeout' is assigned a value but never used.","Assignments to the 'timeout' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'menuStrongHandler'. Either include it or remove the dependency array.",["89"],"React Hook useEffect has a missing dependency: 'handleSubmit'. Either include it or remove the dependency array.",["90"],"'state' is assigned a value but never used.",{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [dispatch, state.quizzMode]",{"range":"97","text":"98"},"Update the dependencies array to be: [location, menuStrongHandler]",{"range":"99","text":"100"},"Update the dependencies array to be: [handleSubmit, seconds]",{"range":"101","text":"102"},[1874,1891],"[dispatch, state.quizzMode]",[1009,1019],"[location, menuStrongHandler]",[3130,3139],"[handleSubmit, seconds]"]