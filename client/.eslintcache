[{"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\pages\\trivialarch.page.jsx":"1","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\pages\\home.page.jsx":"2","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\App.js":"3","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\pages\\contact.page.jsx":"4","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\store\\reducer.js":"5","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\navbar\\navbar.component.jsx":"6","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\footer\\footer.component.jsx":"7","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\store\\actions.js":"8","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\store\\store.component.jsx":"9","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\icons\\architects.component.jsx":"10","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\index.js":"11","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\pages\\icons.page.jsx":"12","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\quiz\\ranking.component.jsx":"13","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\quiz\\score.component.jsx":"14","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\quiz\\quizMode.component.jsx":"15","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\quiz\\question.component.jsx":"16","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\quiz\\rules.component.jsx":"17"},{"size":3216,"mtime":1613124751410,"results":"18","hashOfConfig":"19"},{"size":1938,"mtime":1613332550368,"results":"20","hashOfConfig":"19"},{"size":1487,"mtime":1613137102928,"results":"21","hashOfConfig":"19"},{"size":3365,"mtime":1613332964291,"results":"22","hashOfConfig":"19"},{"size":2024,"mtime":1613136796755,"results":"23","hashOfConfig":"19"},{"size":2261,"mtime":1613061159950,"results":"24","hashOfConfig":"19"},{"size":331,"mtime":1611492264903,"results":"25","hashOfConfig":"19"},{"size":404,"mtime":1613136428289,"results":"26","hashOfConfig":"19"},{"size":797,"mtime":1613331389104,"results":"27","hashOfConfig":"19"},{"size":912,"mtime":1611529176072,"results":"28","hashOfConfig":"19"},{"size":599,"mtime":1611426547215,"results":"29","hashOfConfig":"19"},{"size":747,"mtime":1611528803090,"results":"30","hashOfConfig":"19"},{"size":1276,"mtime":1612974570831,"results":"31","hashOfConfig":"19"},{"size":1897,"mtime":1613124634047,"results":"32","hashOfConfig":"19"},{"size":1451,"mtime":1613308629467,"results":"33","hashOfConfig":"19"},{"size":4081,"mtime":1613141404486,"results":"34","hashOfConfig":"19"},{"size":932,"mtime":1613124625763,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"1t1pnf6",{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"45"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\pages\\trivialarch.page.jsx",["79"],"import React, { useState, useEffect, useContext } from \"react\"\r\nimport \"./trivialarch.styles.css\";\r\nimport QuizMode from \"../components/quiz/quizMode.component\";\r\nimport Rules from \"../components/quiz/rules.component\";\r\nimport Question from \"../components/quiz/question.component\";\r\nimport Score from \"../components/quiz/score.component\";\r\nimport Ranking from \"../components/quiz/ranking.component\";\r\n\r\n\r\n// REDUX HOOKS\r\nimport { Context } from \"../components/store/store.component\";\r\nimport { ACTIONS } from \"../components/store/actions\";\r\n\r\n\r\nconst questions = require(\"../assets/questions.asset.json\");\r\n\r\n\r\n\r\nexport default function TrivialArch() {\r\n\r\n    const [state, dispatch] = useContext(Context);\r\n    const [showRanking, setShowRanking] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        const sortedQuestions = [];\r\n        const sortedReducedQuestions = [];\r\n        const randomIndex = [];\r\n\r\n        if (state.quizMode === \"\") {\r\n            dispatch({ type: ACTIONS.ADD_QUESTIONS, payload: { questions: [] } })\r\n        } else {\r\n            for (let question of questions) {\r\n                if (question.tags.includes(state.quizMode)) {\r\n                    sortedQuestions.push(question)\r\n                }\r\n            }\r\n\r\n            while (randomIndex.length < 20) {\r\n                const randomNum = Math.ceil(Math.random() * sortedQuestions.length);\r\n                if (!randomIndex.includes(randomNum)) {\r\n                    randomIndex.push(randomNum)\r\n                }\r\n            }\r\n\r\n            for (let index of randomIndex) {\r\n                sortedReducedQuestions.push(sortedQuestions[index - 1])\r\n            }\r\n\r\n            console.log(\"sorted questions: \", sortedReducedQuestions)\r\n            dispatch({ type: ACTIONS.ADD_QUESTIONS, payload: { questions: sortedReducedQuestions } })\r\n        }\r\n\r\n    }, [state.quizMode])\r\n\r\n    const handleCancel = e => {\r\n        e.preventDefault();\r\n        dispatch({ type: ACTIONS.RESTORE_GAME })\r\n    }\r\n\r\n    const handleRanking = () => {\r\n        setShowRanking(!showRanking)\r\n    }\r\n\r\n\r\n    const quizDisplay = () => {\r\n\r\n        if (showRanking) {\r\n            return <Ranking />\r\n        } else if (state.quizMode === \"\") {\r\n            return <QuizMode />\r\n        } else if (!state.isReady && state.quizMode !== \"\") {\r\n            return <Rules />\r\n        } else if (state.isReady && state.quizMode !== \"\" && !state.isFinished) {\r\n            return <Question />\r\n        } else if (state.isFinished) {\r\n            return <Score />\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"trivialarch-main\">\r\n            <div className=\"trivialarch-container\">\r\n\r\n                {quizDisplay()}\r\n\r\n                {/* <QuizMode /> */}\r\n                {/* <Rules /> */}\r\n                {/* <Question /> */}\r\n                {/* <Score /> */}\r\n                {/* <Ranking /> */}\r\n\r\n\r\n                {state.quizMode !== \"\" && !state.isFinished && <button onClick={handleCancel} className=\"cancel-btn\">Restart</button>}\r\n                {state.quizMode === \"\" && <button onClick={handleRanking} className=\"cancel-btn\">{!showRanking ? \"Ranking\" : \"Menu\"}</button>}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}",["80","81"],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\pages\\home.page.jsx",["82","83"],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\App.js",["84","85"],"import React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport NavBar from \"./components/navbar/navbar.component\";\nimport Footer from \"./components/footer/footer.component\";\nimport Home from \"./pages/home.page\";\nimport Icons from \"./pages/icons.page\";\nimport TrivialArch from \"./pages/trivialarch.page\";\nimport Contact from \"./pages/contact.page\";\nimport Store from \"./components/store/store.component\";\nimport { Switch, Route, useLocation } from 'react-router-dom';\n\n\nexport default function App() {\n\n  const [menuStrong, setMenuStrong] = useState(\"\");\n  let location = useLocation().pathname\n\n  const menuStrongHandler = () => {\n    switch (location) {\n      case \"/\":\n        setMenuStrong(\"Home\")\n        break;\n      case \"/icons\":\n        setMenuStrong(\"Icons\")\n        break;\n      case \"/trivialArch\":\n        setMenuStrong(\"TrivialArch\")\n        break;\n      case \"/contact\":\n        setMenuStrong(\"Contact\")\n        break;\n    }\n  }\n\n  useEffect(() => {\n    menuStrongHandler()\n  }, [location])\n\n  return (\n    <div className=\"App\">\n      <NavBar menuStrong={menuStrong} />\n\n      <Store>\n        <Switch>\n\n          <Route path=\"/icons/:architect\" component={Icons} />\n          <Route path=\"/icons\" component={Icons} />\n          <Route path=\"/trivialArch\" component={TrivialArch} />\n          <Route path=\"/contact\" component={Contact} />\n          <Route path=\"/*\" component={Home} />\n\n\n\n        </Switch>\n      </Store>\n\n      <Footer />\n    </div>\n  );\n}\n",["86","87"],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\pages\\contact.page.jsx",["88","89"],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\store\\reducer.js",[],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\navbar\\navbar.component.jsx",[],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\footer\\footer.component.jsx",[],["90","91"],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\store\\actions.js",[],["92","93"],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\store\\store.component.jsx",[],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\icons\\architects.component.jsx",["94"],"import \"./architects.styles.css\";\r\nconst architects = require(\"../../assets/architects.asset.json\");\r\n\r\nexport default function Architects() {\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"data-container\">\r\n\r\n            {/* {\r\n                architects.map((data, id) => {\r\n                    const { nickname, name, surname } = data\r\n                    return (\r\n                        <tr key={id} className=\"architect\">\r\n                            <th>{nickname}</th>\r\n                            <th>{name}</th>\r\n                            <th>{surname}</th>\r\n                        </tr>\r\n                    )\r\n                })\r\n            } */}\r\n\r\n            <h4>Icons</h4>\r\n\r\n                <div className=\"lds-grid\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n\r\n                <h5>Coming soon</h5>\r\n\r\n        </div>\r\n\r\n    )\r\n}","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\index.js",[],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\pages\\icons.page.jsx",[],["95","96"],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\quiz\\ranking.component.jsx",[],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\quiz\\score.component.jsx",[],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\quiz\\quizMode.component.jsx",["97"],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\quiz\\question.component.jsx",["98","99","100"],"import { useState, useEffect, useContext } from \"react\";\r\nimport { Context } from \"../store/store.component\";\r\nimport { ACTIONS } from \"../store/actions\";\r\n\r\nimport \"./question.styles.css\";\r\n\r\n\r\n\r\nexport default function Question() {\r\n\r\n    const [state, dispatch] = useContext(Context);\r\n\r\n    const [questionsAnswer, setQuestionsAnswer] = useState(false);\r\n    const [counter, setCounter] = useState(\"\");\r\n    const [randomIndexes, setRandomIndexes] = useState([]);\r\n\r\n    const handleSubmit = e => {\r\n        e && e.preventDefault();\r\n        let right = 0;\r\n        let wrong = 0;\r\n        questionsAnswer ? right++ : wrong++\r\n        dispatch({ type: ACTIONS.ADD_ANSWER, payload: { right, wrong } })\r\n        setQuestionsAnswer(false)\r\n        setCounter(clearTimeout(counter))\r\n        dispatch({ type: ACTIONS.RESTART_SECONDS })\r\n        if (state.answers.total === state.questionsList.length - 1) {\r\n            // congratulations and score\r\n            dispatch({ type: ACTIONS.TOGGLE_ISFINISHED })\r\n        }\r\n    }\r\n\r\n    const questionTemplate = () => {\r\n\r\n        return (\r\n            state.questionsList.map((item, id) => {\r\n\r\n                // let randomAnswersOrder = []\r\n                // console.log(randomAnswersOrder)\r\n\r\n                // for (let i of randomIndexes) {\r\n                //     randomAnswersOrder.push(item.answers[i])\r\n                // }\r\n\r\n                // console.log(randomAnswersOrder)\r\n                return (\r\n                    <form onSubmit={handleSubmit} key={id}>\r\n\r\n                        <h3 className=\"question\">{item.question}</h3>\r\n\r\n                        {\r\n                            item.answers.map((item, i) => {\r\n\r\n                                return (\r\n                                    <>\r\n                                        <input\r\n                                            key={i}\r\n                                            type=\"radio\"\r\n                                            name=\"answer\"\r\n                                            id={\"answer\" + i + 1}\r\n                                            className={\"input\" + i + 1}\r\n                                            onChange={() => setQuestionsAnswer(item.isCorrect)}\r\n                                        />\r\n                                        <label htmlFor={\"answer\" + i + 1} className={\"answer\" + i + 1} >{item.answer}</label>\r\n                                    </>\r\n                                )\r\n                            })\r\n                        }\r\n\r\n                        <button className=\"button\" type=\"submit\">Next question</button>\r\n\r\n                    </form>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        let timing = setTimeout(() => {\r\n            if (state.seconds <= 0) {\r\n                handleSubmit()\r\n            } else {\r\n                dispatch({ type: ACTIONS.MINUS_SECONDS })\r\n            }\r\n        }, 1000)\r\n        setCounter(timing)\r\n    }, [state.seconds])\r\n\r\n    // useEffect(() => {\r\n    //     let newIndexes = []\r\n    //     while (newIndexes.length < 4) {\r\n    //         const randomNum = Math.floor(Math.random() * 4)\r\n    //         !newIndexes.includes(randomNum) && newIndexes.push(randomNum)\r\n    //     }\r\n    //     setRandomIndexes([...newIndexes])\r\n    //     console.log(newIndexes)\r\n    // }, [state.answers.total])\r\n\r\n\r\n    return (\r\n        <div className=\"question-container\">\r\n\r\n            <h4 className=\"question-num\">Question n° {state.answers.total + 1}</h4>\r\n            <h4 className=\"topic\">Mode: {state.quizzMode}</h4>\r\n            <h4 className=\"correct\">Correct: {state.answers.right}</h4>\r\n            <h4 className=\"incorrect\">Incorrect: {state.answers.wrong}</h4>\r\n            <h4 className=\"timer\">Time:\r\n                <span\r\n                    style={{ color: state.seconds >= 10 ? \"green\" : \"red\" }}\r\n                >\r\n                    {state.seconds}\r\n                </span>\r\n            </h4>\r\n\r\n            {questionTemplate()[state.answers.total]}\r\n\r\n\r\n        </div>\r\n    )\r\n}","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\quiz\\rules.component.jsx",[],{"ruleId":"101","severity":1,"message":"102","line":54,"column":8,"nodeType":"103","endLine":54,"endColumn":24,"suggestions":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":10,"column":12,"nodeType":"111","messageId":"112","endLine":10,"endColumn":17},{"ruleId":"101","severity":1,"message":"113","line":44,"column":8,"nodeType":"103","endLine":44,"endColumn":10,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":19,"column":5,"nodeType":"117","messageId":"118","endLine":32,"endColumn":6},{"ruleId":"101","severity":1,"message":"119","line":37,"column":6,"nodeType":"103","endLine":37,"endColumn":16,"suggestions":"120"},{"ruleId":"105","replacedBy":"121"},{"ruleId":"107","replacedBy":"122"},{"ruleId":"109","severity":1,"message":"123","line":8,"column":19,"nodeType":"111","messageId":"112","endLine":8,"endColumn":28},{"ruleId":"109","severity":1,"message":"124","line":39,"column":19,"nodeType":"111","messageId":"112","endLine":39,"endColumn":23},{"ruleId":"105","replacedBy":"125"},{"ruleId":"107","replacedBy":"126"},{"ruleId":"105","replacedBy":"127"},{"ruleId":"107","replacedBy":"128"},{"ruleId":"109","severity":1,"message":"129","line":2,"column":7,"nodeType":"111","messageId":"112","endLine":2,"endColumn":17},{"ruleId":"105","replacedBy":"130"},{"ruleId":"107","replacedBy":"131"},{"ruleId":"109","severity":1,"message":"132","line":9,"column":12,"nodeType":"111","messageId":"112","endLine":9,"endColumn":17},{"ruleId":"109","severity":1,"message":"133","line":15,"column":12,"nodeType":"111","messageId":"112","endLine":15,"endColumn":25},{"ruleId":"109","severity":1,"message":"134","line":15,"column":27,"nodeType":"111","messageId":"112","endLine":15,"endColumn":43},{"ruleId":"101","severity":1,"message":"135","line":87,"column":8,"nodeType":"103","endLine":87,"endColumn":23,"suggestions":"136"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["137"],"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"no-unused-vars","'timer' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'quoteshandler' and 'settingTimer'. Either include them or remove the dependency array.",["140"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'menuStrongHandler'. Either include it or remove the dependency array.",["141"],["138"],["139"],"'distpacth' is assigned a value but never used.","'data' is assigned a value but never used.",["138"],["139"],["138"],["139"],"'architects' is assigned a value but never used.",["138"],["139"],"'state' is assigned a value but never used.","'randomIndexes' is assigned a value but never used.","'setRandomIndexes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'handleSubmit'. Either include them or remove the dependency array.",["142"],{"desc":"143","fix":"144"},"no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},"Update the dependencies array to be: [dispatch, state.quizMode]",{"range":"151","text":"152"},"Update the dependencies array to be: [quoteshandler, settingTimer]",{"range":"153","text":"154"},"Update the dependencies array to be: [location, menuStrongHandler]",{"range":"155","text":"156"},"Update the dependencies array to be: [dispatch, handleSubmit, state.seconds]",{"range":"157","text":"158"},[1853,1869],"[dispatch, state.quizMode]",[1265,1267],"[quoteshandler, settingTimer]",[1009,1019],"[location, menuStrongHandler]",[2994,3009],"[dispatch, handleSubmit, state.seconds]"]