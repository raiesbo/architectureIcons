[{"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\pages\\trivialarch.page.jsx":"1","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\quizz\\rules.component.jsx":"2","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\pages\\home.page.jsx":"3","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\App.js":"4","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\pages\\contact.page.jsx":"5","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\quizz\\question.component.jsx":"6","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\store\\reducer.js":"7","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\quizz\\quizzMode.component.jsx":"8"},{"size":2262,"mtime":1612894866234,"results":"9","hashOfConfig":"10"},{"size":874,"mtime":1612891714286,"results":"11","hashOfConfig":"10"},{"size":1783,"mtime":1611575564481,"results":"12","hashOfConfig":"10"},{"size":1487,"mtime":1612893685373,"results":"13","hashOfConfig":"10"},{"size":594,"mtime":1611496695718,"results":"14","hashOfConfig":"10"},{"size":2008,"mtime":1612902650989,"results":"15","hashOfConfig":"10"},{"size":1235,"mtime":1612902696404,"results":"16","hashOfConfig":"10"},{"size":1455,"mtime":1612893496148,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"1t1pnf6",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\pages\\trivialarch.page.jsx",["36","37","38","39"],"import React, { useState, useEffect, useReducer, createContext, useContext } from \"react\"\r\nimport \"./trivialarch.styles.css\";\r\nimport QuizzMode from \"../components/quizz/quizzMode.component\";\r\nimport Rules from \"../components/quizz/rules.component\";\r\nimport Question from \"../components/quizz/question.component\";\r\n\r\n\r\n// REDUX HOOKS\r\nimport { Context } from \"../components/store/store.component\";\r\nimport { ACTIONS } from \"../components/store/actions\";\r\n\r\n\r\nconst questions = require(\"../assets/questions.asset.json\");\r\n\r\n\r\n\r\nexport default function TrivialArch() {\r\n\r\n    const [state, dispatch] = useContext(Context);\r\n\r\n    useEffect(() => {\r\n\r\n        const sortedQuestions = [];\r\n        const sortedReducedQuestions = [];\r\n        const randomIndex = [];\r\n\r\n        if (state.quizzMode === \"\") {\r\n            dispatch({ type: ACTIONS.ADD_QUESTIONS, payload: { questions: [] } })\r\n        } else {\r\n            for (let question of questions) {\r\n                if (question.tags.includes(state.quizzMode)) {\r\n                    sortedQuestions.push(question)\r\n                }\r\n            }\r\n\r\n            while (randomIndex.length < 10) {\r\n                const randomNum = Math.ceil(Math.random() * sortedQuestions.length);\r\n                if (!randomIndex.includes(randomNum)) {\r\n                    randomIndex.push(randomNum)\r\n                }\r\n            }\r\n\r\n            for (let index of randomIndex) {\r\n                sortedReducedQuestions.push(sortedQuestions[index - 1])\r\n            }\r\n\r\n            console.log(\"sorted questions: \", sortedReducedQuestions)\r\n            dispatch({ type: ACTIONS.ADD_QUESTIONS, payload: { questions: sortedReducedQuestions } })\r\n        }\r\n\r\n    }, [state.quizzMode])\r\n\r\n\r\n    return (\r\n        <div className=\"trivialarch-main\">\r\n            <div className=\"trivialarch-container\">\r\n\r\n\r\n\r\n                {state.quizzMode === \"\" && <QuizzMode dispatch={dispatch} />}\r\n                    {!state.isReady && state.quizzMode !== \"\" ? <Rules dispatch={dispatch} /> : null}\r\n                    {state.isReady && state.quizzMode !== \"\" ? <Question dispatch={dispatch} /> : null}\r\n                {/* <Rules /> */}\r\n                {/* <Question /> */}\r\n\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\quizz\\rules.component.jsx",[],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\pages\\home.page.jsx",["40","41"],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\App.js",["42","43"],"import React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport NavBar from \"./components/navbar/navbar.component\";\nimport Footer from \"./components/footer/footer.component\";\nimport Home from \"./pages/home.page\";\nimport Icons from \"./pages/icons.page\";\nimport TrivialArch from \"./pages/trivialarch.page\";\nimport Contact from \"./pages/contact.page\";\nimport Store from \"./components/store/store.component\";\nimport { Switch, Route, useLocation } from 'react-router-dom';\n\n\nexport default function App() {\n\n  const [menuStrong, setMenuStrong] = useState(\"\");\n  let location = useLocation().pathname\n\n  const menuStrongHandler = () => {\n    switch (location) {\n      case \"/\":\n        setMenuStrong(\"Home\")\n        break;\n      case \"/icons\":\n        setMenuStrong(\"Icons\")\n        break;\n      case \"/trivialArch\":\n        setMenuStrong(\"TrivialArch\")\n        break;\n      case \"/contact\":\n        setMenuStrong(\"Contact\")\n        break;\n    }\n  }\n\n  useEffect(() => {\n    menuStrongHandler()\n  }, [location])\n\n  return (\n    <div className=\"App\">\n      <NavBar menuStrong={menuStrong} />\n\n      <Store>\n        <Switch>\n\n          <Route path=\"/icons/:architect\" component={Icons} />\n          <Route path=\"/icons\" component={Icons} />\n          <Route path=\"/trivialArch\" component={TrivialArch} />\n          <Route path=\"/contact\" component={Contact} />\n          <Route path=\"/*\" component={Home} />\n\n\n\n        </Switch>\n      </Store>\n\n      <Footer />\n    </div>\n  );\n}\n","D:\\CODES\\projects\\architectureIcons_react\\client\\src\\pages\\contact.page.jsx",[],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\quizz\\question.component.jsx",[],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\store\\reducer.js",[],"D:\\CODES\\projects\\architectureIcons_react\\client\\src\\components\\quizz\\quizzMode.component.jsx",["44"],{"ruleId":"45","severity":1,"message":"46","line":1,"column":17,"nodeType":"47","messageId":"48","endLine":1,"endColumn":25},{"ruleId":"45","severity":1,"message":"49","line":1,"column":38,"nodeType":"47","messageId":"48","endLine":1,"endColumn":48},{"ruleId":"45","severity":1,"message":"50","line":1,"column":50,"nodeType":"47","messageId":"48","endLine":1,"endColumn":63},{"ruleId":"51","severity":1,"message":"52","line":51,"column":8,"nodeType":"53","endLine":51,"endColumn":25,"suggestions":"54"},{"ruleId":"45","severity":1,"message":"55","line":36,"column":9,"nodeType":"47","messageId":"48","endLine":36,"endColumn":16},{"ruleId":"51","severity":1,"message":"56","line":36,"column":19,"nodeType":"57","endLine":36,"endColumn":51},{"ruleId":"58","severity":1,"message":"59","line":19,"column":5,"nodeType":"60","messageId":"61","endLine":32,"endColumn":6},{"ruleId":"51","severity":1,"message":"62","line":37,"column":6,"nodeType":"53","endLine":37,"endColumn":16,"suggestions":"63"},{"ruleId":"45","severity":1,"message":"64","line":9,"column":12,"nodeType":"47","messageId":"48","endLine":9,"endColumn":17},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useReducer' is defined but never used.","'createContext' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["65"],"'timeout' is assigned a value but never used.","Assignments to the 'timeout' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'menuStrongHandler'. Either include it or remove the dependency array.",["66"],"'state' is assigned a value but never used.",{"desc":"67","fix":"68"},{"desc":"69","fix":"70"},"Update the dependencies array to be: [dispatch, state.quizzMode]",{"range":"71","text":"72"},"Update the dependencies array to be: [location, menuStrongHandler]",{"range":"73","text":"74"},[1709,1726],"[dispatch, state.quizzMode]",[1009,1019],"[location, menuStrongHandler]"]